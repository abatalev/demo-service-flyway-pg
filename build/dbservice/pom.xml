<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.10</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.abatalev.demo</groupId>
	<artifactId>dbservice</artifactId>
	<version>0.0.1</version>
	<name>dbservice</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencyManagement>
    	<dependencies>
        	<dependency>
            	<groupId>org.testcontainers</groupId>
            	<artifactId>testcontainers-bom</artifactId>
            	<version>1.17.2</version>
            	<type>pom</type>
            	<scope>import</scope>
        	</dependency>
			<dependency>
            	<groupId>io.opentelemetry.instrumentation</groupId>
            	<artifactId>opentelemetry-instrumentation-bom</artifactId>
            	<version>2.10.0</version>
            	<type>pom</type>
            	<scope>import</scope>
        	</dependency>
    	</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
 		</dependency>
		
		<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-database-postgresql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
    		<groupId>io.opentelemetry.instrumentation</groupId>
    		<artifactId>opentelemetry-spring-boot-starter</artifactId>
		</dependency>

		<dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-otlp</artifactId>
        </dependency>
		<!-- <dependency>
            <groupId>io.opentelemetry.semconv</groupId>
            <artifactId>opentelemetry-semconv-incubating</artifactId>
            <version>1.30.0-alpha</version>
        </dependency> -->
		<dependency>
            <groupId>io.opentelemetry.semconv</groupId>
            <artifactId>opentelemetry-semconv</artifactId>
            <version>1.25.0-alpha</version>
        </dependency>

		<dependency>
    		<groupId>io.micrometer</groupId>
    		<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-otlp</artifactId>
		</dependency>
		<dependency>
      		<groupId>io.micrometer</groupId>
      		<artifactId>micrometer-tracing</artifactId>
    	</dependency>
		<dependency>
  			<groupId>io.micrometer</groupId>
  			<artifactId>micrometer-tracing-bridge-otel</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>app</finalName>
		<plugins>
			<plugin>
         		<groupId>org.apache.maven.plugins</groupId>
         		<artifactId>maven-dependency-plugin</artifactId>
         		<version>3.8.1</version>
         		<executions>
           			<execution>
             			<id>unpack</id>
             			<phase>generate-test-sources</phase>
             			<goals>
               				<goal>unpack</goal>
             			</goals>
             			<configuration>
               				<artifactItems>
                 				<artifactItem>
                   					<groupId>com.abatalev.demo</groupId>
                   					<artifactId>initdb</artifactId>
                   					<version>0.0.1</version>
				   					<classifier>sql</classifier>
                   					<type>jar</type>
                   					<overWrite>false</overWrite>
                   					<outputDirectory>${project.build.directory}/db</outputDirectory>
                   					<includes>**/*.sql</includes>
                 				</artifactItem>
               				</artifactItems>
             			</configuration>
           			</execution>
         		</executions>
       		</plugin>
			<plugin>
  				<groupId>org.codehaus.mojo</groupId>
  				<artifactId>build-helper-maven-plugin</artifactId>
  				<version>1.12</version>
  				<executions>
    				<execution>
      					<id>add-test-resource</id>
      					<phase>generate-test-sources</phase>
      					<goals>
        					<goal>add-test-resource</goal>
      					</goals>
      					<configuration>
        					<resources>
          						<resource>
            						<directory>${project.basedir}/target/db/</directory>
				          		</resource>
        					</resources>
      					</configuration>
    				</execution> 
  				</executions>
			</plugin>
			<plugin>
        		<groupId>com.github.spotbugs</groupId>
        		<artifactId>spotbugs-maven-plugin</artifactId>
        		<version>4.9.3.0</version>
				<configuration>
          			<xmlOutput>true</xmlOutput>
		          	<xmlOutputDirectory>target/site</xmlOutputDirectory>
					<excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
					<plugins>
                    	<plugin>
                        	<groupId>com.h3xstream.findsecbugs</groupId>
                        	<artifactId>findsecbugs-plugin</artifactId>
                        	<version>1.12.0</version>
                    	</plugin>
                	</plugins>
        		</configuration>
				<executions>
          			<execution>
						<phase>prepare-package</phase>
            			<goals>
              				<goal>check</goal>
            			</goals>
          			</execution>
        		</executions>
      		</plugin>
			<plugin>
  				<groupId>org.jacoco</groupId>
  				<artifactId>jacoco-maven-plugin</artifactId>
  				<version>0.8.12</version>
				<executions>
        			<execution>
            			<goals>
                			<goal>prepare-agent</goal>
            			</goals>
        			</execution>
        			<execution>
            			<id>report</id>
            			<phase>prepare-package</phase>
            			<goals>
                			<goal>report</goal>
            			</goals>
        			</execution>
					<execution>
    					<id>jacoco-check</id>
						<phase>prepare-package</phase>
    					<goals>
        					<goal>check</goal>
    					</goals>
    					<configuration>
        					<rules>
            					<rule>
                					<element>PACKAGE</element>
                					<limits>
                    					<limit>
                        					<counter>LINE</counter>
                        					<value>COVEREDRATIO</value>
                        					<minimum>0.30</minimum>
                    					</limit>
                					</limits>
            					</rule>
        					</rules>
    					</configuration>
					</execution>
    			</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
