spring:
  main:
    banner-mode: "off"
  application:
    name: dbservice
  flyway:
    enabled: false
  datasource:
    driver: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/test_db?currentSchema=test_schema
    username: ${DB_USER}
    password: ${DB_PASS}
    hikari:
      connectionTimeout: 20000
      maximumPoolSize: 5

logging:
  level:
    root: INFO

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
  otlp:
    tracing:
      endpoint: http://${OTLP_HOST}:4318/v1/traces
      timeout: 10s
    metrics:
      export:
        url: http://${OTLP_HOST}:4318/v1/metrics
        step: 5s

  tracing:
    enabled: true
    sampling:
      probability: 1

  opentelemetry:
    resource-attributes:
      "service-name": ${spring.application.name}

otel:
  traces.exporter: otlp
  logs.exporter: otlp
  metrics.exporter: otlp
  metric.export.interval: 5000 #Export metrics each five seconds
  instrumentation:
    micrometer.enabled: true #Enabe Micrometer metrics bridge
    jdbc.enabled: true
    logback-mdc.enabled: true
  exporter:
    otlp:
      endpoint: http://${OTLP_HOST}:4318

  propagators:
    - tracecontext
  resource:
    attributes:
      service:
        name: ${spring.application.name}
        namespace: x4
