services:
  builddocs:
    image: abatalev/owners_builddocs:0.0.1
    ports:
      - 8087:80
    networks:
      - owners-network 

  db:
    image: abatalev/owners_postgres:0.0.1
    environment:
      POSTGRES_PASSWORD: postgres
    networks:
      - owners-network 
  
  initdb:
    image: abatalev/owners_initdb:0.0.1
    environment:
      DB_HOST: db
      DB_USER: owners_admin
      DB_PASS: qwerty
      DB_SCHEMA: owners_schema
    depends_on:
      - db
    networks:
      - owners-network 
     

  service:
    image: abatalev/owners_service:0.0.1
    environment:
      DB_HOST: db
      DB_USER: owners_user
      DB_PASS: qwerty
      DB_PORT: 5432
      OTLP_DISABLED: false
      OTLP_HOST: otel
    ports:
      - "8090:8080"  
    depends_on:
      - db
      - otel
    networks:
      - owners-network

  k6:
    image: grafana/k6:1.0.0-rc1    
    command: run --tag test-id=123 -o experimental-opentelemetry /scripts/test.js
    volumes:
      - ./build/generator/test.js:/scripts/test.js:ro
    environment:
      K6_NO_USAGE_REPORT: true
      K6_WEB_DASHBOARD: true
      K6_WEB_DASHBOARD_PORT: 5665
      K6_WEB_DASHBOARD_PERIOD: 5s
      K6_OTEL_GRPC_EXPORTER_INSECURE: true 
      K6_OTEL_METRIC_PREFIX: k6_
      K6_OTEL_GRPC_EXPORTER_ENDPOINT: otel:4317
      K6_OTEL_HTTP_EXPORTER_ENDPOINT: otel:4318
    ports:
      - "8091:5665"       
    depends_on:
      - service
      - otel
    networks:
      - owners-network

  # observability
  otel:
    image: otel/opentelemetry-collector-contrib:latest
    command: [--config=/etc/otel-config.yml]
    volumes:
      - ./config/otel-config.yml:/etc/otel-config.yml:ro
    ports:
      - "55679:55679"
    depends_on:
      - loki
      - tempo
    networks:
      - owners-network

  prometheus:
    image: prom/prometheus:v3.2.1
    command: --config.file=/etc/prometheus/prometheus.yml --log.level=debug
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    links:
      - otel
    networks:
      - owners-network

  loki:
    image: grafana/loki:3.2.0
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./config/loki.yaml:/etc/loki/local-config.yaml
    ports:
      - "3100"
    networks:
      - owners-network

  tempo:
    image: grafana/tempo:2.7.2
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./config/tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200"
    #   - "4317"  # otlp grpc
    #   - "4318"      
    networks:
      - owners-network

  grafana:
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    image: grafana/grafana:11.6.0
    volumes:
      - ./config/grafana.yml:/etc/grafana/provisioning/datasources/default.yml
    ports:
      - "3001:3000"
    depends_on:  
      - prometheus
      - tempo
      - loki
    networks:
      - owners-network

  # pgadmin:
  #   container_name: pgadmin_container
  #   image: dpage/pgadmin4:7
  #   depends_on:
  #     - db
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: pgadmin@example.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #     PGADMIN_CONFIG_SERVER_MODE: 'False'
  #     MASTER_PASSWORD_REQUIRED: False
  #   ports:
  #     - 8050:80  
  #   networks:
  #     - owners-network

  # alloy:
  #   image: grafana/alloy:v1.7.5
  #   ports:
  #     - 12345:12345
  #   volumes:
  #     - ./config/config.alloy:/etc/alloy/config.alloy:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
  #   depends_on:
  #     - loki  
  #     - prometheus
  #   networks:
  #     - owners-network

networks:
  owners-network:
    driver: bridge     